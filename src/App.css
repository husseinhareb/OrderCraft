/* /src/App.css */

/* Reset / base */
* { margin: 0; padding: 0; box-sizing: border-box; }

html, body, #root { height: 100%; width: 100%; }

:root{
  /* Layout tokens */
  --rail-width: 48px;
  --rail-border-width: 3px;
  --rail-border-color: black;

  --hamburger-size: 40px;
  --hamburger-padding-inline: 8px;
  --hamburger-padding-block: 6px;

  --main-gap: 0px; /* extra space between rail and content if desired */
}

/* App shell */
.app-container {
  min-height: 100vh;
  width: 100%;
  position: relative;
  background: transparent;
}

/* Full-height left rail with red right border */
.left-rail {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: var(--rail-width);
  border-right: var(--rail-border-width) solid var(--rail-border-color);
  display: flex;
  align-items: flex-start;
  justify-content: center;
  padding-top: 8px;
  background: transparent; /* or match your theme background */
  z-index: 1100;
}

/* Hamburger button inside the rail */
.hamburger {
  width: var(--hamburger-size);
  height: 32px;
  padding-inline: var(--hamburger-padding-inline);
  padding-block: var(--hamburger-padding-block);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
}

/* Main application area sits to the right of the rail */
.main-area {
  margin-left: calc(var(--rail-width) + var(--main-gap));
  min-height: 100vh;
  width: auto;
}

/* Optional: if you have a large fixed left panel on wide screens, keep this if needed
   (your RightPanel/LeftPanel can still control their own layout). */
@media (min-width: 1024px) {
  /* Add any desktop-specific spacing rules here if required */
}
